{"ast":null,"code":"import { Cliente } from './cliente.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ClienteComponent {\n  constructor(clienteService, routes) {\n    this.clienteService = clienteService;\n    this.routes = routes;\n    this.msg = \"\";\n    this.cliente = new Cliente();\n  }\n  ngOnInit() {\n    let id = this.routes.snapshot.paramMap.get(\"id\");\n    if (id != null) {\n      this.cliente.id = Number(id);\n    }\n  }\n  atualizar() {\n    try {\n      this.clienteService.atualizar(this.cliente);\n      this.msg = \"Dados atualizados com sucesso\";\n    } catch (error) {\n      this.notificarErro();\n    }\n    window.alert(this.msg);\n  }\n  consultar() {\n    this.msg = \"\";\n    try {\n      this.clienteService.consultar(this.cliente.id).subscribe(resposta => {\n        this.cliente.bairro = resposta.bairro;\n        this.cliente.cep = resposta.cep;\n        this.cliente.cidade = resposta.cidade;\n        this.cliente.complemento = resposta.complemento;\n        this.cliente.cpf = resposta.cpf;\n        this.cliente.email = resposta.email;\n        this.cliente.logradouro = resposta.logradouro;\n        this.cliente.nome = resposta.nome;\n        this.cliente.senha = resposta.senha;\n        this.cliente.uf = resposta.uf;\n        if (resposta.nome == null) {\n          this.msg = \"Registro não encontrado\";\n        }\n      });\n    } catch (error) {\n      this.notificarErro();\n    }\n  }\n  excluir() {\n    try {\n      this.clienteService.excluir(this.cliente.id);\n      this.msg = \"Conta excluída com sucesso\";\n    } catch (error) {\n      this.notificarErro();\n    }\n  }\n  notificarErro() {\n    this.msg = \"Ops, parece algo deu errado\";\n  }\n}\nClienteComponent.ɵfac = function ClienteComponent_Factory(t) {\n  return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nClienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClienteComponent,\n  selectors: [[\"app-cliente\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"w3-container\", \"w3-padding\", \"dados\"], [1, \"w3-text-indigo\"], [\"type\", \"text\", \"placeholder\", \"Nome\", \"required\", \"\", \"pattern\", \"[A-z\\\\s]{6,100}\", 1, \"w3-input\", \"w3-border\", \"w3-round\", \"w3-margin\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\", 1, \"w3-input\", \"w3-border\", \"w3-round\", \"w3-margin\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Senha\", \"required\", \"\", 1, \"w3-input\", \"w3-border\", \"w3-round\", \"w3-margin\"], [\"type\", \"password\", \"placeholder\", \"Confirmar senha\", \"required\", \"\", 1, \"w3-input\", \"w3-border\", \"w3-round\", \"w3-margin\"], [\"type\", \"number\", \"placeholder\", \"CPF\", \"disabled\", \"true\", \"pattern\", \"\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}-\\\\d{2}\", 1, \"w3-input\", \"w3-border\", \"w3-round\", \"w3-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"w3-padding\"], [1, \"w3-half\", \"w3-center\"], [1, \"w3-button\", \"w3-indigo\", \"w3-round\", \"w3-hover-orange\", 3, \"click\"], [1, \"w3-button\", \"w3-round\", \"w3-red\", \"w3-hover-orange\", 3, \"click\"]],\n  template: function ClienteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Meus dados\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.cliente.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.cliente.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4)(6, \"input\", 5);\n      i0.ɵɵelementStart(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.cliente.cpf = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ClienteComponent_Template_button_click_10_listener() {\n        return ctx.atualizar();\n      });\n      i0.ɵɵtext(11, \"Atualizar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ClienteComponent_Template_button_click_13_listener() {\n        return ctx.excluir();\n      });\n      i0.ɵɵtext(14, \"Excluir conta\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.cpf);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.PatternValidator, i3.NgModel],\n  styles: [\".dados[_ngcontent-%COMP%]{\\r\\n    padding-right: 3rem!important;\\r\\n    width: 750px;\\r\\n}\\r\\n\\r\\n.modal-header[_ngcontent-%COMP%]{\\r\\n    padding-top: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2xpZW50ZS9jbGllbnRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBNkI7SUFDN0IsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5kYWRvc3tcclxuICAgIHBhZGRpbmctcmlnaHQ6IDNyZW0haW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDc1MHB4O1xyXG59XHJcblxyXG4ubW9kYWwtaGVhZGVye1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Cliente","ClienteComponent","constructor","clienteService","routes","ngOnInit","id","snapshot","paramMap","get","cliente","Number","atualizar","msg","error","notificarErro","window","alert","consultar","subscribe","resposta","bairro","cep","cidade","complemento","cpf","email","logradouro","nome","senha","uf","excluir","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\OneDrive - Fatec Centro Paula Souza\\Documentos\\Estudos\\Fatec_ADS\\4-Web\\pw-p2\\mintz\\src\\app\\cliente\\cliente.component.ts","D:\\OneDrive - Fatec Centro Paula Souza\\Documentos\\Estudos\\Fatec_ADS\\4-Web\\pw-p2\\mintz\\src\\app\\cliente\\cliente.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Cliente } from './cliente.model';\r\nimport { ClienteService } from '../cliente.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cliente',\r\n  templateUrl: './cliente.component.html',\r\n  styleUrls: ['./cliente.component.css']\r\n})\r\nexport class ClienteComponent {\r\n  msg: string = \"\";\r\n  cliente: Cliente = new Cliente();\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private routes: ActivatedRoute\r\n  ){}\r\n    \r\n\r\n  ngOnInit(){\r\n    let id = this.routes.snapshot.paramMap.get(\"id\");\r\n    if (id != null) {\r\n      this.cliente.id = Number(id);\r\n    }\r\n  }\r\n\r\n  atualizar(): void{\r\n    try {\r\n        this.clienteService.atualizar(this.cliente);\r\n        this.msg = \"Dados atualizados com sucesso\";\r\n    } catch (error) {\r\n      this.notificarErro();\r\n    }\r\n    window.alert(this.msg);\r\n  }\r\n\r\n  consultar(){\r\n    this.msg = \"\";\r\n    try {\r\n      this.clienteService.consultar(this.cliente.id).subscribe(\r\n        (resposta: Cliente) => {\r\n          this.cliente.bairro = resposta.bairro;\r\n          this.cliente.cep = resposta.cep;\r\n          this.cliente.cidade = resposta.cidade;\r\n          this.cliente.complemento = resposta.complemento;\r\n          this.cliente.cpf = resposta.cpf;\r\n          this.cliente.email = resposta.email;\r\n          this.cliente.logradouro = resposta.logradouro;\r\n          this.cliente.nome = resposta.nome;\r\n          this.cliente.senha = resposta.senha;\r\n          this.cliente.uf = resposta.uf;\r\n\r\n          if (resposta.nome == null) {\r\n            this.msg = \"Registro não encontrado\";\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      this.notificarErro();\r\n    }\r\n  }\r\n\r\n  excluir(): void{\r\n    try {\r\n      this.clienteService.excluir(this.cliente.id);\r\n      this.msg = \"Conta excluída com sucesso\";\r\n    } catch (error) {\r\n      this.notificarErro();\r\n    }\r\n  }\r\n\r\n  notificarErro(){\r\n    this.msg = \"Ops, parece algo deu errado\";\r\n  }\r\n}\r\n","<div class=\"w3-container w3-padding dados\">\r\n    <h3 class=\"w3-text-indigo\">Meus dados</h3>\r\n    <input type=\"text\" class=\"w3-input w3-border w3-round w3-margin\" placeholder=\"Nome\" required pattern=\"[A-z\\s]{6,100}\" [(ngModel)]=\"cliente.nome\">\r\n    <input type=\"email\" class=\"w3-input w3-border w3-round w3-margin\" placeholder=\"Email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" [(ngModel)]=\"cliente.email\">\r\n    <input type=\"password\" class=\"w3-input w3-border w3-round w3-margin\" placeholder=\"Senha\" required>\r\n    <input type=\"password\" class=\"w3-input w3-border w3-round w3-margin\" placeholder=\"Confirmar senha\" required>\r\n    <input type=\"number\" class=\"w3-input w3-border w3-round w3-margin\" placeholder=\"CPF\" disabled=\"true\" pattern=\"\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}\" [(ngModel)]=\"cliente.cpf\">\r\n    \r\n    <div class=\"w3-padding\">\r\n        <div class=\"w3-half w3-center\">\r\n            <button class=\"w3-button w3-indigo w3-round w3-hover-orange\" (click)=\"atualizar()\">Atualizar</button>\r\n        </div>\r\n        <div class=\"w3-half w3-center\">\r\n            <button class=\"w3-button w3-round w3-red w3-hover-orange\" (click)=\"excluir()\">Excluir conta</button>\r\n\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}