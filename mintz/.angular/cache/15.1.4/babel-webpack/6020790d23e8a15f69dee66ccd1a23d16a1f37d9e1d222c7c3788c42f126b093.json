{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Cliente } from '../cliente/cliente.model';\nlet LoginComponent = class LoginComponent {\n  constructor(clienteService, routes, notificacaoService) {\n    this.clienteService = clienteService;\n    this.routes = routes;\n    this.notificacaoService = notificacaoService;\n    this.msg = \"\";\n    this.cliente = new Cliente();\n  }\n  cadastrar() {\n    try {\n      this.clienteService.inserir(this.cliente);\n      this.msg = \"Cadastro efetuado com sucesso\";\n    } catch (error) {\n      this.msg = \"Ops, parece que algo deu errado\";\n    }\n    document.getElementById('divCadastro').style.display = 'none';\n    window.alert(this.msg);\n  }\n  recuperar() {\n    document.getElementById('divEsqueciSenha').style.display = 'none';\n    window.alert('Um link para recuperação de senha foi enviado ao seu email');\n  }\n  logar() {\n    try {\n      this.clienteService.logar(this.cliente).subscribe(resposta => {\n        if (resposta.nome == null) {\n          //Se a resposta for nula, significa que o usuário cujo email e senha informados não foi localizado\n          this.msg = \"Email ou senha incorretos\";\n          this.notificacaoService.notificar(this.msg);\n        } else {\n          //Se encontrar o usuário, salvará no local storage\n          localStorage.setItem(\"cliente\", JSON.stringify(resposta));\n          this.notificacaoService.notificar(\"Login efetuado com sucesso\");\n          window.location.href = \"./produtos\";\n        }\n      });\n    } catch (error) {\n      this.msg = \"Ops, parece que algo deu errado\";\n      this.notificacaoService.notificar(this.msg);\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,0BAA0B;AAU3C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,cAA8B,EAC9BC,MAAsB,EACtBC,kBAAsC;IAFtC,mBAAc,GAAdF,cAAc;IACd,WAAM,GAANC,MAAM;IACN,uBAAkB,GAAlBC,kBAAkB;IAN5B,QAAG,GAAW,EAAE;IAChB,YAAO,GAAY,IAAIL,OAAO,EAAE;EAM9B;EAEFM,SAAS;IACP,IAAI;MACF,IAAI,CAACH,cAAc,CAACI,OAAO,CAAC,IAAI,CAACC,OAAO,CAAC;MACzC,IAAI,CAACC,GAAG,GAAG,+BAA+B;KAC3C,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACD,GAAG,GAAG,iCAAiC;;IAE7CE,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAiB,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IAC9EC,MAAM,CAACC,KAAK,CAAC,IAAI,CAACP,GAAG,CAAC;EAExB;EAEAQ,SAAS;IACNN,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAiB,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IAClFC,MAAM,CAACC,KAAK,CAAC,4DAA4D,CAAC;EAE5E;EAEAE,KAAK;IACH,IAAI;MACF,IAAI,CAACf,cAAc,CAACe,KAAK,CAAC,IAAI,CAACV,OAAO,CAAC,CAACW,SAAS,CAC9CC,QAAiB,IAAI;QACpB,IAAIA,QAAQ,CAACC,IAAI,IAAI,IAAI,EAAE;UACzB;UACA,IAAI,CAACZ,GAAG,GAAG,2BAA2B;UACtC,IAAI,CAACJ,kBAAkB,CAACiB,SAAS,CAAC,IAAI,CAACb,GAAG,CAAC;SAC5C,MAAM;UACL;UACAc,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;UACzD,IAAI,CAACf,kBAAkB,CAACiB,SAAS,CAAC,4BAA4B,CAAC;UAC/DP,MAAM,CAACY,QAAQ,CAACC,IAAI,GAAG,YAAY;;MAEvC,CAAC,CACF;KAEF,CAAC,OAAOlB,KAAK,EAAE;MACd,IAAI,CAACD,GAAG,GAAG,iCAAiC;MAC5C,IAAI,CAACJ,kBAAkB,CAACiB,SAAS,CAAC,IAAI,CAACb,GAAG,CAAC;;EAE/C;CACD;AAlDYR,cAAc,eAL1BF,SAAS,CAAC;EACT8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW9B,cAAc,CAkD1B;SAlDYA,cAAc","names":["Component","Cliente","LoginComponent","constructor","clienteService","routes","notificacaoService","cadastrar","inserir","cliente","msg","error","document","getElementById","style","display","window","alert","recuperar","logar","subscribe","resposta","nome","notificar","localStorage","setItem","JSON","stringify","location","href","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\OneDrive - Fatec Centro Paula Souza\\Documentos\\Estudos\\Fatec_ADS\\4-Web\\pw-p2\\mintz\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Cliente } from '../cliente/cliente.model';\r\nimport { ClienteService } from '../cliente.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NotificacaoService } from '../notificacao.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  msg: string = \"\";\r\n  cliente: Cliente = new Cliente();\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private routes: ActivatedRoute,\r\n    private notificacaoService: NotificacaoService\r\n  ){}\r\n    \r\n  cadastrar(): void{\r\n    try {\r\n      this.clienteService.inserir(this.cliente);\r\n      this.msg = \"Cadastro efetuado com sucesso\"\r\n    } catch (error) {\r\n      this.msg = \"Ops, parece que algo deu errado\";\r\n    }\r\n    (document.getElementById('divCadastro') as HTMLElement).style.display = 'none';\r\n    window.alert(this.msg);\r\n\r\n  }\r\n\r\n  recuperar(): void{\r\n    (document.getElementById('divEsqueciSenha') as HTMLElement).style.display = 'none';\r\n    window.alert('Um link para recuperação de senha foi enviado ao seu email');\r\n\r\n  }\r\n\r\n  logar(): void{\r\n    try {\r\n      this.clienteService.logar(this.cliente).subscribe(\r\n        (resposta: Cliente) => {\r\n          if (resposta.nome == null) {\r\n            //Se a resposta for nula, significa que o usuário cujo email e senha informados não foi localizado\r\n            this.msg = \"Email ou senha incorretos\";\r\n            this.notificacaoService.notificar(this.msg);\r\n          } else {\r\n            //Se encontrar o usuário, salvará no local storage\r\n            localStorage.setItem(\"cliente\", JSON.stringify(resposta));\r\n            this.notificacaoService.notificar(\"Login efetuado com sucesso\");\r\n            window.location.href = \"./produtos\";\r\n          }\r\n        }\r\n      );\r\n      \r\n    } catch (error) {\r\n      this.msg = \"Ops, parece que algo deu errado\"\r\n      this.notificacaoService.notificar(this.msg);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}